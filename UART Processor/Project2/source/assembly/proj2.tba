; CHOU THAO
; 012647516
; CECS 460
; TRANSMIT ASSEMBLY
; This assembly code will transmit the message
; CSULB CECS 460 - (COUNTER REGISTER)<CR><LF>
; onto a computer terminal. While in its main it
; will perodically walk a one through the onboard
; LEDs of a NEXYS 3 FPGA.

; EQU go here for register names
; NUMBER EQUS
ZEROES  EQU 0000 
ONE     EQU 0001
FOUR    EQU 0004 
DELAY   EQU BA03
CRCHK   EQU 0016
LFCHK   EQU 0017
LDCHK   EQU 0080

; REGISTER EQUS
SCRATCH EQU R0 ; USED TO STORE INITIAL SCRATCH RAM DATA
PTR     EQU R1 ; POINTER TO STACK RAM
TRANS   EQU R3 ; LOAD REGISTER FOR OUTPUT TRANSMIT
COUNTN  EQU R4 ; NOP COUNTER
COUNTER EQU R5 ; COUNT REGISTER
LEDS    EQU R6 ; LEDS
QUOT    EQU R7 ; QUOTIENT FROM DIVISION
DIV     EQU R8 ; DIVIDER AMOUNT
TEMP    EQU R9 ; TEMP REGISTER FOR COUNTER
VALID   EQU RA ; VALID REGISTER FOR DIGIT TO BEGIN
NVAL    EQU RB ; VALID REGISTER FOR NOP COUNTER

; INITIALIZATION
; ENABLE INTERRUPTS
START   
        ENINT
        LOAD PTR, ZEROES     ; INITIALIZE PTR TO ADDRESS 0
        LOAD TRANS, ZEROES   ; INITIALIZE TRANS REGISTER TO 0
        LOAD COUNTN, ZEROES  ; INITIALIZE COUNTN REGISTER TO 0
        LOAD COUNTER, ZEROES ; INITIALIZE COUNTER REGISTER TO 0
        LOAD NVAL, ZEROES    ; INITIALIZE NVAL REGISTER TO 0
        LOAD LEDS, ONE       ; INITIALIZE LEDS WITH 1
        CALL LOADING         ; JUMP TO SCRATCH INITIALIZATION
        CALL BINTOHEX        ; INITIALIZE COUNTER TO SCRATCH

; main
LOOP
        COMP LEDS, LDCHK     ; CHECK IF LEDS ARE AT 8
        JUMPNZ LEDSUP
        LOAD LEDS, ONE       ; RESET LEDS TO 1
        JUMP LDOUT

LEDSUP
        RL LEDS              ; ROTATE LEDS TO THE LEFT

LDOUT
        OUTPUT LEDS, ONE     ; UPDATE LEDS
        CALL NON             ; CALL DELAY ROUTINE
        JUMP LOOP            
        

; ISR ADDRESS
        ADDRESS 0300

; INTERRUPT SERVICE ROUTINE
ISR     
        COMP PTR, CRCHK   ; CHECK IF PTR iS 22
        JUMPZ CHARRET     ; JUMP TO OUTPUT CR
        COMP PTR, LFCHK   ; CHECK IF PTR IS 23
        JUMPZ CHARLF      ; JUMP TO TRANSMIT LF
        JUMP PRINT        ; JUMP TO TRANSMIT CSULB CECS 460 -  

; PROGRAM ADDRESS
        ADDRESS  0400

; initialize scratch memory with
; CSULB CECS 460 -
LOADING          
        LOAD  SCRATCH, 0043 ; LOAD HEX ASCII FOR C TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0053 ; LOAD HEX ASCII FOR S TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0055 ; LOAD HEX ASCII FOR U TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 004C ; LOAD HEX ASCII FOR L TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0042 ; LOAD HEX ASCII FOR B TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0020 ; LOAD HEX ASCII FOR SPACE TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0043 ; LOAD HEX ASCII FOR C TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0045 ; LOAD HEX ASCII FOR E TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0043 ; LOAD HEX ASCII FOR C TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0053 ; LOAD HEX ASCII FOR S TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0020 ; LOAD HEX ASCII FOR SPACE TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0034 ; LOAD HEX ASCII FOR 4 TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0036 ; LOAD HEX ASCII FOR 6 TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0030 ; LOAD HEX ASCII FOR 0 TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0020 ; LOAD HEX ASCII FOR SPACE TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 002D ; LOAD HEX ASCII FOR - TO R0
        CALL RAMINIT
        LOAD  SCRATCH, 0020 ; LOAD HEX ASCII FOR SPACE TO R0
        CALL RAMINIT
        LOAD PTR, ZEROES    ; RESET PTR TO ADDRESS 0
        RETURN
  
; DELAY FUNCTION INBETWEEN LED UPDATES
NON     
        ADD COUNTN, ONE     ; INCREMENT COUNTN
        NOP
        COMP COUNTN, DELAY  ; CHECK IF COUNTN IS 11
        JUMPC NON
        LOAD COUNTN, ZEROES ; RESET COUNTN
        ADD NVAL, ONE       ; INCREMENT NVAL
        COMP NVAL, FOUR     ; CHECK IF NVAL IS 4
        JUMPNZ NON
        LOAD NVAL, ZEROES   ; RESET NVAL
        RETURN

; STORE TO SCRATCH RAM
RAMINIT 
        STORE SCRATCH, (PTR)  
        ADD   PTR, ONE       ; INCREMENT PTR ADDRESS BY 1
        RETURN

; TRANSMIT CSULB CECS 460 - (COUNTER REGISTER)
; ONE AT A TIME FOR EACH CALL
PRINT   
        FETCH TRANS, (PTR)   ; FETCH FROM SCRATCH POINTED BY PTR
        OUTPUT TRANS, ZEROES ; OUTPUT FROM SCRATCH TO TRANSMIT
        ADD PTR, ONE         ; INCREMENT PTR
        RETEN
        

; CREATES NEWLINE 

CHARRET 
        LOAD TRANS, 000D     ; LOAD ASCII CR
        OUTPUT TRANS, ZEROES ; OUTPUT ASCII CR
        ADD PTR, ONE         ; INCREMENT PTR
        RETEN

CHARLF  LOAD TRANS, 000A     ; LOAD HEX ASCII FOR LF
        OUTPUT TRANS, ZEROES ; OUTPUT ASCII LF
        LOAD PTR, ZEROES     ; RESET PTR ADDRESS
        ADD COUNTER, ONE     ; INCREMENT COUNTER
        CALL BINTOHEX        ; CONVERT COUNTER TO HEX ASCII
        RETEN

; BINARY TO HEX ASCII
; CONVERTS COUNTER REGISTER
; TO HEX ASCII FOR EACH DIGIT
; (MULTIPLES OF 10S)
BINTOHEX
         LOAD VALID, ZEROES ; INITIALIZE VALID TO 0
         LOAD PTR, 0011     ; INITIALIZE PTR TO ADDRESS 17
         LOAD DIV, 2710     ; INITIALIZE DIV WITH 10,000
         LOAD QUOT, ZEROES  ; LOAD QUOT WITH 0
         LOAD TEMP, COUNTER ; STORE COUNTER INTO TEMP REGISTER

DIVCHK         
         COMP COUNTER, DIV  ; COMPARE COUNTER TO DIV
         JUMPC CHNGDIV      ; IF COUNTER IS LESS THAN DIV CHANGE DIV
         ADD QUOT, ONE      ; INCREMENT QUOT REGISTER
         SUB COUNTER, DIV   ; SUBTRACT FROM COUNTER CURRENT DIV
         JUMP DIVCHK        ; JUMP TO INITIAL COMPARISON 
         
CHNGDIV  
         COMP VALID, ONE    ; CHECK TO SEE IF VALID
         JUMPZ CONV
         COMP QUOT, ZEROES  ; COMPARE TO ZEROES
         JUMPZ EMPTY
         LOAD VALID, ONE    ; LOAD VALID WITH 1

CONV
         ADD QUOT, 0030     ; CONVERT QUOT TO ASCII
         JUMP CONTI

EMPTY
         ADD QUOT, 0020     ; ADD HEX ASCII SPACE

CONTI
         STORE QUOT, (PTR)  ; STORE QUOT IN SCRATCH
         LOAD QUOT, ZEROES  ; RESET QUOT TO 0 FOR NEXT 10S DIGIT
         ADD PTR, ONE       ; INCREMENT PTR
         COMP DIV, 000A     ; CHECK IF DIV IS 10
         JUMPZ FINAL
         COMP DIV, 0064     ; CHECK IF DIV IS 100
         JUMPZ DIVTEN
         COMP DIV, 03E8     ; CHECK IF DIV IS 1,000
         JUMPZ DIVHUND
         JUMP DIVTHOUD

FINAL    
         ADD QUOT, COUNTER  ; LOAD QUOT WITH REMAINING
         ADD QUOT, 0030     ; CONVERT QUOT TO ASCII
         STORE QUOT, (PTR)  ; STORE QUOT IN SCRATCH
         LOAD PTR, ZEROES   ; RESET PTR TO ADDRESS 0
         LOAD COUNTER, TEMP ; LOAD COUNTER WITH ORIGINAL VALUE
         RETURN

DIVTHOUD 
         LOAD DIV, 03E8     ; LOAD DIV WITH 1,000
         JUMP DIVCHK
         
DIVHUND 
         LOAD DIV, 0064     ; LOAD DIV WITH 100
         JUMP DIVCHK
DIVTEN 
         LOAD DIV, 000A     ; LOAD DIV WITH 100
         JUMP DIVCHK

; ISR VECTORED THROUGH 0FFE
        ADDRESS 0FFE

ENDIT   
        JUMP ISR

END


        
